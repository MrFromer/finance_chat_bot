from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.methods import send_sticker
from aiogram import html
import app.keyboards as kb
import sys
sys.path.append('E://Studying_project/')
from Parser_news.news_parser_1 import currency
from Parser_for_ML.parser_for_ml import candle_data
from chatgpt import result_gpt


router = Router()

@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(text=f"""
–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.full_name)}üëã
–ù–∞—à –±–æ—Ç –≤—ã–¥–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞–ª—é—Ç–Ω—ã–º –ø–∞—Ä–∞–º, —Ç–∞–∫ –∂–µ –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –∏ –¥–∞–≤–∞—Ç—å —Ç–µ–±–µ —Å–æ–≤–µ—Ç—ã, –±—Ä–∞—Ç–∏—à–∫–∞!

ü§ñ–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –≤—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É, —Ç–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!
–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã –Ω–∞–ø–∏—à–∏ üëâüèº /help
""", reply_markup=kb.main_menu)
    await message.delete()


@router.message(Command('help'))
async def help(message: Message):
    #await bot.send_sticker(chat_id= message.chat.id, sticker='CAACAgIAAxkBAAEKoOVlPeSr9mMp7nttYSLV4Q1Z3OeeVwAChwEAAiteUwt4J9ZNhn9pYDAE')
    await message.answer(text= """
    ü§©–î–∞–≤–∞–π –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ, –±—Ä–∞—Ç–∏—à–∫–∞, —Å–µ–π—á–∞—Å –Ω–∞—à –±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–º–∞–Ω–¥—ã:
/pares - –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã
/favorite - –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã
/news - –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ñ–æ–Ω–¥–æ–≤–æ–º—É —Ä—ã–Ω–∫—É
                         
üóø–û—Å—Ç–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ """)
    await message.delete()

@router.message(F.text == "üí∏–í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã")
async def Pares(message: Message):
    await message.answer(text='üî•–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É:', reply_markup=kb.ikb_currency)
    await message.delete()

@router.message(Command('pares'))
async def Pares_cmd(message: Message):
    await message.answer(text='üî•–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É:', reply_markup=kb.ikb_currency)
    await message.delete()

TEXT_NEWS = ''' '''
currency_list = currency()
for i in currency_list:
    TEXT_NEWS+=str(i)
    TEXT_NEWS+=str('\n –ú–ù–ï–ù–ò–ï GPT: {result_gpt}')

@router.message(F.text == "üßæ–ù–æ–≤–æ—Å—Ç–∏")
async def Pares(message: Message):
    await message.answer(text = TEXT_NEWS)
    await message.delete()

@router.message(Command('news'))
async def Pares_cmd(message: Message):
    await message.answer(text = TEXT_NEWS)
    await message.delete()

@router.message(F.text == "‚≠êÔ∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ")
async def Pares(message: Message):
    await message.answer(text='–ü–æ–∫–∞ —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
    await message.delete()

@router.message(Command('favorite'))
async def Pares_cmd(message: Message):
    await message.answer(text='–ü–æ–∫–∞ —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
    await message.delete()



TEXT_EUR_USD = f'''
–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–ª–µ–¥—É—é—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –ø–æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ EUR/USD:
{candle_data}
'''
@router.callback_query(F.data == 'eur/usd')
async def eur_usd(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É EUR/USD')
    await callback.message.edit_text(text= TEXT_EUR_USD, reply_markup = kb.ikb_return)

@router.callback_query(F.data == 'return')
async def return_ikb(callback: CallbackQuery):
    await callback.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä')
    await callback.message.edit_text(text='üî•–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É:', reply_markup=kb.ikb_currency)

@router.message()
async def check_message(message: Message) -> None:
    try:
        await message.answer(chat_id=message.chat.id, text='–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞–ª—é—Ç–Ω—ã–º –ø–∞—Ä–∞–º, –Ω–∞–ø–∏—à–∏—Ç–µ /pares')
    except TypeError:
        await message.answer(text='–≠—Ç–æ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–Ω–µ –∫–æ–º–∞–Ω–¥–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /help')
